/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WheelLazyImport = createFileRoute('/wheel')()
const TasksLazyImport = createFileRoute('/tasks')()
const ShopLazyImport = createFileRoute('/shop')()
const FriendsLazyImport = createFileRoute('/friends')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WheelLazyRoute = WheelLazyImport.update({
  path: '/wheel',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wheel.lazy').then((d) => d.Route))

const TasksLazyRoute = TasksLazyImport.update({
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tasks.lazy').then((d) => d.Route))

const ShopLazyRoute = ShopLazyImport.update({
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shop.lazy').then((d) => d.Route))

const FriendsLazyRoute = FriendsLazyImport.update({
  path: '/friends',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/friends.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/friends': {
      id: '/friends'
      path: '/friends'
      fullPath: '/friends'
      preLoaderRoute: typeof FriendsLazyImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksLazyImport
      parentRoute: typeof rootRoute
    }
    '/wheel': {
      id: '/wheel'
      path: '/wheel'
      fullPath: '/wheel'
      preLoaderRoute: typeof WheelLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  FriendsLazyRoute,
  ShopLazyRoute,
  TasksLazyRoute,
  WheelLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/friends",
        "/shop",
        "/tasks",
        "/wheel"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/friends": {
      "filePath": "friends.lazy.tsx"
    },
    "/shop": {
      "filePath": "shop.lazy.tsx"
    },
    "/tasks": {
      "filePath": "tasks.lazy.tsx"
    },
    "/wheel": {
      "filePath": "wheel.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
